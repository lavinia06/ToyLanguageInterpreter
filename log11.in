
------------------
Program ID: 10
Execution Stack: 
(int v;(Ref(int) a;(v=10;(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a))))))))

Symbol Table:
[ 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
int v
(Ref(int) a;(v=10;(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a)))))))

Symbol Table:
[ 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
int v
(Ref(int) a;(v=10;(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a)))))))

Symbol Table:
[ 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
(Ref(int) a;(v=10;(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a)))))))

Symbol Table:
[ 
v: 0, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
(Ref(int) a;(v=10;(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a)))))))

Symbol Table:
[ 
v: 0, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
Ref(int) a
(v=10;(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a))))))

Symbol Table:
[ 
v: 0, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
Ref(int) a
(v=10;(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a))))))

Symbol Table:
[ 
v: 0, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
(v=10;(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a))))))

Symbol Table:
[ 
a: (0,int), 
v: 0, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
(v=10;(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a))))))

Symbol Table:
[ 
a: (0,int), 
v: 0, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
v=10
(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a)))))

Symbol Table:
[ 
a: (0,int), 
v: 0, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
v=10
(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a)))))

Symbol Table:
[ 
a: (0,int), 
v: 0, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a)))))

Symbol Table:
[ 
a: (0,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
(new(a, 22);
;(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a)))))

Symbol Table:
[ 
a: (0,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
new(a, 22);

(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a))))

Symbol Table:
[ 
a: (0,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
new(a, 22);

(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a))))

Symbol Table:
[ 
a: (0,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 


------------------
Program ID: 10
Execution Stack: 
(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a))))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 10
Execution Stack: 
(fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );;(print(v);print(readHeap(a))))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 10
Execution Stack: 
fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );
(print(v);print(readHeap(a)))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 10
Execution Stack: 
fork( (writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a))))) );
(print(v);print(readHeap(a)))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 10
Execution Stack: 
(print(v);print(readHeap(a)))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 13
Execution Stack: 
(writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a)))))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 10
Execution Stack: 
(print(v);print(readHeap(a)))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 13
Execution Stack: 
(writeHeap(a, 30);
;(v=32;(print(v);print(readHeap(a)))))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 10
Execution Stack: 
print(v)
print(readHeap(a))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 13
Execution Stack: 
writeHeap(a, 30);

(v=32;(print(v);print(readHeap(a))))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 10
Execution Stack: 
print(v)
print(readHeap(a))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 13
Execution Stack: 
writeHeap(a, 30);

(v=32;(print(v);print(readHeap(a))))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:

File Table:
[ 
]
Heap: 
[1->22] 

------------------
Program ID: 10
Execution Stack: 
print(readHeap(a))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:
10

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 
(v=32;(print(v);print(readHeap(a))))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:
10

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 10
Execution Stack: 
print(readHeap(a))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:
10

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 
(v=32;(print(v);print(readHeap(a))))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:
10

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 10
Execution Stack: 

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:
10
30

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 
v=32
(print(v);print(readHeap(a)))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:
10
30

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 
v=32
(print(v);print(readHeap(a)))

Symbol Table:
[ 
a: (1,int), 
v: 10, 
]
Output Table:
10
30

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 
(print(v);print(readHeap(a)))

Symbol Table:
[ 
a: (1,int), 
v: 32, 
]
Output Table:
10
30

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 
(print(v);print(readHeap(a)))

Symbol Table:
[ 
a: (1,int), 
v: 32, 
]
Output Table:
10
30

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 
print(v)
print(readHeap(a))

Symbol Table:
[ 
a: (1,int), 
v: 32, 
]
Output Table:
10
30

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 
print(v)
print(readHeap(a))

Symbol Table:
[ 
a: (1,int), 
v: 32, 
]
Output Table:
10
30

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 
print(readHeap(a))

Symbol Table:
[ 
a: (1,int), 
v: 32, 
]
Output Table:
10
30
32

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 
print(readHeap(a))

Symbol Table:
[ 
a: (1,int), 
v: 32, 
]
Output Table:
10
30
32

File Table:
[ 
]
Heap: 
[1->30] 

------------------
Program ID: 13
Execution Stack: 

Symbol Table:
[ 
a: (1,int), 
v: 32, 
]
Output Table:
10
30
32
30

File Table:
[ 
]
Heap: 
[1->30] 
